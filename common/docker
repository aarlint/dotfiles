#!/bin/bash

# Environment variables
export DOCKER_REPO_PREFIX=benmatselby

# Aliases
alias drasi='docker rmi $(docker images -f "dangling=true" -q)'
alias drai='docker rmi $(docker images -q)'
alias drac='docker rm $(docker ps -aq)'
alias dsac='docker stop $(docker ps -aq)'

# Functions
function del_stopped(){
  local name=$1
  local state
  state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

  if [[ "$state" == "false" ]]; then
    docker rm "$name"
  fi
}

# https://github.com/genuinetools/pepper
function pepper() {
  docker run --rm -t \
    -eGITHUB_TOKEN \
    jess/pepper "$@"
}

# https://github.com/genuinetools/udict
function udict() {
    docker run --rm -t jess/udict "$@"
}

# https://github.com/stoplightio/spectral
function spectral() {
  docker run \
    --rm \
    -it \
    -v "$(pwd)":/tmp \
    stoplight/spectral \
    "$@"
}

# https://github.com/stoplightio/prism
function prism() {
  if [ -z ${1} ]; then
    printf "Please specify a prism command"
    return
  fi

  command="${1}"
  shift 1

  docker run \
    --rm \
    -it \
    -P \
    -v "$(pwd)":/tmp \
    stoplight/prism \
    "${command}" \
    -h 0.0.0.0 \
    "$@"
}

# https://github.com/Redocly/redoc
function redoc() {
  if [ -z ${1} ]; then
    printf "Please specify an Open API Specification file\n"
    return
  fi

  printf "URL: http://localhost:8080\n"

  docker run \
    --rm \
    -p 8080:80 \
    -v "${PWD}/${1}:/usr/share/nginx/html/${1}" \
    -e SPEC_URL=$(basename ${1}) \
    redocly/redoc
}

# Container checker
function trivy() {
  docker run \
    --rm \
    -v /var/run/docker.sock:/var/run/docker.sock \
    aquasec/trivy \
    "$@"
}
